[33mcommit f81f0f80c34e2219c58f8319e9e9ccda32cccfb2[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: unknown <kuangyaolong@thewesthill.net>
Date:   Wed Nov 17 14:35:10 2021 +0800

    第一版工具

[1mdiff --git a/.vs/WindowsFormsApp1/v16/.suo b/.vs/WindowsFormsApp1/v16/.suo[m
[1mnew file mode 100644[m
[1mindex 0000000..dcc5169[m
Binary files /dev/null and b/.vs/WindowsFormsApp1/v16/.suo differ
[1mdiff --git a/App.config b/App.config[m
[1mnew file mode 100644[m
[1mindex 0000000..ef1894b[m
[1m--- /dev/null[m
[1m+++ b/App.config[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m﻿<?xml version="1.0" encoding="utf-8" ?>[m
[32m+[m[32m<configuration>[m
[32m+[m[32m    <startup>[m[41m [m
[32m+[m[32m        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />[m
[32m+[m[32m    </startup>[m
[32m+[m
[32m+[m[32m</configuration>[m
\ No newline at end of file[m
[1mdiff --git a/AutoSize.cs b/AutoSize.cs[m
[1mnew file mode 100644[m
[1mindex 0000000..3d4ae53[m
[1m--- /dev/null[m
[1m+++ b/AutoSize.cs[m
[36m@@ -0,0 +1,116 @@[m
[32m+[m[32m﻿using System;[m
[32m+[m[32musing System.Collections.Generic;[m
[32m+[m[32musing System.Linq;[m
[32m+[m[32musing System.Text;[m
[32m+[m[32musing System.Threading.Tasks;[m
[32m+[m[32musing System.Windows.Forms;[m
[32m+[m
[32m+[m[32mnamespace WindowsFormsApp1[m
[32m+[m[32m{[m
[32m+[m[32m    class AutoSize[m
[32m+[m[32m    {[m
[32m+[m[41m      [m
[32m+[m[32m        //(1).声明结构,只记录窗体和其控件的初始位置和大小。[m
[32m+[m[32m        public struct controlRect[m
[32m+[m[32m        {[m
[32m+[m[32m            public int Left;[m
[32m+[m[32m            public int Top;[m
[32m+[m[32m            public int Width;[m
[32m+[m[32m            public int Height;[m
[32m+[m[32m        }[m
[32m+[m[32m        //(2).声明 1个对象[m
[32m+[m[32m        //注意这里不能使用控件列表记录 List nCtrl;，因为控件的关联性，记录的始终是当前的大小。[m
[32m+[m[32m        //      public List oldCtrl= new List();//这里将西文的大于小于号都过滤掉了，只能改为中文的，使用中要改回西文[m
[32m+[m[32m        public List<controlRect> oldCtrl = new List<controlRect>();[m
[32m+[m[32m        int ctrlNo = 0;//1;[m
[32m+[m[32m        //(3). 创建两个函数[m
[32m+[m[32m        //(3.1)记录窗体和其控件的初始位置和大小,[m
[32m+[m[32m        public void controllInitializeSize(Control mForm)[m
[32m+[m[32m        {[m
[32m+[m[32m            controlRect cR;[m
[32m+[m[32m            cR.Left = mForm.Left; cR.Top = mForm.Top; cR.Width = mForm.Width; cR.Height = mForm.Height;[m
[32m+[m[32m            oldCtrl.Add(cR);//第一个为"窗体本身",只加入一次即可[m
[32m+[m[32m            AddControl(mForm);//窗体内其余控件还可能嵌套控件(比如panel),要单独抽出,因为要递归调用[m
[32m+[m[32m                              //this.WindowState = (System.Windows.Forms.FormWindowState)(2);//记录完控件的初始位置和大小后，再最大化[m
[32m+[m[32m                              //0 - Normalize , 1 - Minimize,2- Maximize[m
[32m+[m[32m        }[m
[32m+[m[32m        private void AddControl(Control ctl)[m
[32m+[m[32m        {[m
[32m+[m[32m            foreach (Control c in ctl.Controls)[m
[32m+[m[32m            {  //**放在这里，是先记录控件的子控件，后记录控件本身[m
[32m+[m[32m                if (c.Controls.Count > 0)[m
[32m+[m[32m                    AddControl(c);//窗体内其余控件还可能嵌套控件(比如panel),要单独抽出,因为要递归调用[m
[32m+[m[32m                controlRect objCtrl;[m
[32m+[m[32m                objCtrl.Left = c.Left; objCtrl.Top = c.Top; objCtrl.Width = c.Width; objCtrl.Height = c.Height;[m
[32m+[m[32m                oldCtrl.Add(objCtrl);[m
[32m+[m[32m                //**放在这里，是先记录控件本身，后记录控件的子控件[m
[32m+[m[32m                if (c.Controls.Count > 0)[m
[32m+[m[32m                    AddControl(c);//窗体内其余控件还可能嵌套控件(比如panel),要单独抽出,因为要递归调用[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        //(3.2)控件自适应大小,[m
[32m+[m[32m        public void controlAutoSize(Control mForm)[m
[32m+[m[32m        {[m
[32m+[m[32m            if (ctrlNo == 0)[m
[32m+[m[32m            { //*如果在窗体的Form1_Load中，记录控件原始的大小和位置，正常没有问题，但要加入皮肤就会出现问题，因为有些控件如dataGridView的的子控件还没有完成，个数少[m
[32m+[m[32m              //*要在窗体的Form1_SizeChanged中，第一次改变大小时，记录控件原始的大小和位置,这里所有控件的子控件都已经形成[m
[32m+[m[32m                controlRect cR;[m
[32m+[m[32m                //  cR.Left = mForm.Left; cR.Top = mForm.Top; cR.Width = mForm.Width; cR.Height = mForm.Height;[m
[32m+[m[32m                cR.Left = 0; cR.Top = 0; cR.Width = mForm.PreferredSize.Width; cR.Height = mForm.PreferredSize.Height;[m
[32m+[m
[32m+[m[32m                oldCtrl.Add(cR);//第一个为"窗体本身",只加入一次即可[m
[32m+[m[32m                AddControl(mForm);//窗体内其余控件可能嵌套其它控件(比如panel),故单独抽出以便递归调用[m
[32m+[m[32m            }[m
[32m+[m[32m            float wScale = (float)mForm.Width / (float)oldCtrl[0].Width;//新旧窗体之间的比例，与最早的旧窗体[m
[32m+[m[32m            float hScale = (float)mForm.Height / (float)oldCtrl[0].Height;//.Height;[m
[32m+[m[32m            ctrlNo = 1;//进入=1，第0个为窗体本身,窗体内的控件,从序号1开始[m
[32m+[m[32m            AutoScaleControl(mForm, wScale, hScale);//窗体内其余控件还可能嵌套控件(比如panel),要单独抽出,因为要递归调用[m
[32m+[m[32m        }[m
[32m+[m[32m        private void AutoScaleControl(Control ctl, float wScale, float hScale)[m
[32m+[m[32m        {[m
[32m+[m[32m            int ctrLeft0, ctrTop0, ctrWidth0, ctrHeight0;[m
[32m+[m[32m            //int ctrlNo = 1;//第1个是窗体自身的 Left,Top,Width,Height，所以窗体控件从ctrlNo=1开始[m
[32m+[m[32m            foreach (Control c in ctl.Controls)[m
[32m+[m[32m            { //**放在这里，是先缩放控件的子控件，后缩放控件本身[m
[32m+[m[32m                if (c.Controls.Count > 0)[m
[32m+[m[32m                    AutoScaleControl(c, wScale, hScale);//窗体内其余控件还可能嵌套控件(比如panel),要单独抽出,因为要递归调用[m
[32m+[m[32m                ctrLeft0 = oldCtrl[ctrlNo].Left;[m
[32m+[m[32m                ctrTop0 = oldCtrl[ctrlNo].Top;[m
[32m+[m[32m                ctrWidth0 = oldCtrl[ctrlNo].Width;[m
[32m+[m[32m                ctrHeight0 = oldCtrl[ctrlNo].Height;[m
[32m+[m
[32m+[m[32m                //c.Left = (int)((ctrLeft0 - wLeft0) * wScale) + wLeft1;//新旧控件之间的线性比例[m
[32m+[m[32m                //c.Top = (int)((ctrTop0 - wTop0) * h) + wTop1;[m
[32m+[m[32m                c.Left = (int)((ctrLeft0) * wScale);//新旧控件之间的线性比例。控件位置只相对于窗体，所以不能加 + wLeft1[m
[32m+[m[32m                c.Top = (int)((ctrTop0) * hScale);//[m
[32m+[m[32m                c.Width = (int)(ctrWidth0 * wScale);//只与最初的大小相关，所以不能与现在的宽度相乘 (int)(c.Width * w);[m
[32m+[m[32m                c.Height = (int)(ctrHeight0 * hScale);//[m
[32m+[m[32m                ctrlNo++;//累加序号[m
[32m+[m[32m                //**放在这里，是先缩放控件本身，后缩放控件的子控件[m
[32m+[m[32m                if (c.Controls.Count > 0)[m
[32m+[m[32m                    AutoScaleControl(c, wScale, hScale);//窗体内其余